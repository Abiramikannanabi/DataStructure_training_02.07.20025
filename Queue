//Array implementation
package queue;
class Nomain
{
	int a[]=new int[5];
	int rear=-1,front=-1;
	public void enqueue(int data)
	{
		if(rear==a.length-1)
		{
			System.out.println("Queue is full");
		}
		else if(rear==-1 && front==-1)
		{
			rear=0;
			front=0;
			a[rear]=data;
		}
		else
		{
			rear++;
			a[rear]=data;
		}
	}
	public void dequeue()
	{
		if(rear==-1)
		{
			System.out.println("Queue is empty");
		}
		else if(rear==front)
		{
			System.out.println("Popped element is "+a[rear]);
			rear=-1;
			front=-1;
		}
		else
		{
			System.out.println("Popped element is "+a[front]);
			front++;
		}
	}
	public void display()
	{
		if(rear==-1)
		{
			System.out.println("Queue is empty");
		}
		else {
			System.out.println("The queue elements are :");
			for (int i=front;i<=rear;i++)
			{
				System.out.println(a[i]);
			}
		}
		
	}
	
}
public class Queue {

	public static void main(String[] args) {
		Nomain n=new Nomain();
		n.enqueue(10);
		n.enqueue(20);
		n.enqueue(30);
		n.enqueue(40);
		n.display();
		n.dequeue();
		n.display();
	}
}


//Linked list implementation

package queue;
class Node
{
	int data;
	Node next;
	
	Node(int data)
	{
		this.data=data;
	}
}
class MyQ
{
	Node r,f;
	public void enqueue(int data)
	{
		Node a=new Node(data);
		a.next=null;
		
		if(r==null)
		{
			r=a;
			f=a;
		}
		else 
		{
			r.next=a;
			r=a;
		}
	}
	public void dequeue()
	{
		System.out.println("Deleted element :"+f.data);
		Node tem=f;
		f=f.next;
		tem.next=null;
		
	}
		public void display()
		{
			Node temp=f;
			System.out.println("The queue elements are : ");
			while(temp!=null)
			{
				System.out.println(temp.data);
				temp=temp.next;
			}
		}
}

public class Queue {

	public static void main(String[] args) {
		MyQ m=new MyQ();
		m.enqueue(10);
		m.enqueue(20);
		m.enqueue(30);
		m.enqueue(40);
		m.enqueue(50);
		m.display();
		m.dequeue();
		m.display();
		m.dequeue();
		m.display();
	}
}

